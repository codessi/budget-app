43
// npx  [x]
// gt react-bootstarp doc  [x]
// npm i react-bootstap bootstrap@5.1.3  [x]
// import bootstap css in index.js   [x]
// test on browser for bootstap  [x]
// delete everything except app.js and index.js  [x]
// import Container from react-bootstap/Container  [x]
// jsx Container wrap  [x]
// Stack direction "horizonal" gap '2' cn mb-4  wrap   [x]
// h1.me-auto wrap Budget  [x]
// Button.   varient primary  cont Add Budget  [x]
//  copy  Add Expense  [x]
// add cn on top container , my-4 (margin top bottom)  [x]
//   [x]

406

// sibl stack, div style={{display: 'grid', gridTemplateColumns: "reapeat(auto-fill, minmax(300px, 1fr)), gap: "1rem" alignItems:"flex-start"}}   wrap  [x] []
// <BudgetCard> wrap  [x]
//  create component folder, BudgetCard.jsx  [x]

// rfc   [x]
// jsx Card wrap  [x]
// Card.Body wrap  [x]
// Card.Title wrap  [x]

// div {name}  [x][x]
// div {amount}/ {max}  [x][x]
// pasa name amount max [x]

// create utils.js in src   [x]
// export const currencyFormatter = new Intl.NumberFormat(undefined, { *})  [x][]
// currency: 'usd', style: "currency", minimumFractionDigits: 0,  [x]

// gt BudgetCard.js  [x]
// import {currencyFormatter}  [x]
// replace {amount}, {currencyFormatter.format(amount)}   [x]
// do same on max  [x]

819

// gt app.js  []
// import BudgetCard  []
// in BudgetCard, add prop  name="Entertainment" amount ={200} max={1000}  []


// gt BudgetCard   []
// in Card.Title,  .d-flex.justify-content-between align-items-baseline fw-normal mb-3  []
// in first-child div, .me-2  []
// 2nd  child div, .d-flex align-items-baseline  []
// wrap max with span.text-muted fs-6 ms1   []
// sibl to closing Card.Title,  <ProgressBar />  -- import   []
// cn rounded-pill  []
// varient = {getProgressBarVarient(amount, max)}  []
// create function in bottom, getProgressBarVarient(amount, max){*}  []
// insert const ratio = amount/max  []
// if(ratio < 0.5) return "primary"  []
// if(ration < 0.75) return "warning"   []
// return "danger"   []

// add att. in ProgressBar min ={0} max ={max} now={amount}  []
// change amount in BudgetCard to test on browser   []
// sibl ProgressBar, Stack direction = "horizontal" gap="2" cn="mt-4"  wrap  []
//Button varient = "outline-primary" cn="ms-auto" cont Add Expense    []
// Button varient ="outline-secondary cont View Expense   []

1433 gray background
// gt fn BudgetCard pass gray  []
// insert  const classNames = []  []
// if(amount > max){*}  []
// className.push("bg-danger", "bg-opacity-10")  []
// else if (gray){  []
  classNames.push("bg-light")
}
// add to <Card,  cn ={className.join(" ")}  []
// test by changing amount   []

